# {{services.[0].name}} service

## Instanciating the service

Load the following scripts:

```html
<script src="http://127.0.0.1/api/v1/shared/core.js"></script>
<script src="http://127.0.0.1/api/v1/shared/session.js"></script>
<script src="http://127.0.0.1/api/v1/{{sidl-name}}/service.js"></script>
```

You can then get an instance of the service with code similar to:

```javascript
const session = new lib_session.Session();
const sessionstate = {};
let _{{sidl-name}}Manager = null;
sessionstate.onsessionconnected = function () {
  console.log(`{{services.[0].name}} onsessionconnected`);
  lib_{{sidl-name}}.{{services.[0].name}}.get(session).then(({{services.[0].name}}Service) => {
  console.log(`Got {{services.[0].name}} : #{{services.[0].name}}Service.service_id}`);
  _{{sidl-name}}Manager = {{services.[0].name}}Service;
}).catch((e) => {
  console.log(`Error calling {{services.[0].name}} service${JSON.stringify(e)}`);
  _{{sidl-name}}Manager = null;
});
};

sessionstate.onsessiondisconnected = function () {
  console.log(`{{services.[0].name}} onsessiondisconnected Daemon Crashed`);
};

session.open('websocket', 'localhost', 'secrettoken', sessionstate, true);
```
Then the developer can use **_{{sidl-name}}Manager** as {{services.[0].name}} service instance.

This service implements the [{{services.[0].interface}}](#interface_{{services.[0].interface}}) interface.

---
{{#each enumerations}}
## {{name}} enumeration
```javascript
{
{{~#each members}}
  {{name}}{{#unless @last}},{{/unless}}
{{~/each}}
}
```
{{/each}}
---

{{#each dictionaries}}
## {{name}} dictionnary
```javascript
{
{{~#each members}}
  {{name}}: {{maybe-link typ.extra.[0] typ.extra.[1]}}{{#unless @last}},{{/unless}}
{{~/each}}
}
```
{{/each}}
---

{{#each callbacks}}
## {{name}} callback object
### Creating a {{name}} object
Use code similar to:
```javascript
class MyCallbackObject extends lib_{{sidl-name}}.{{name}}Base {
  constructor(service, session) {
    super(service.id, session);
  }
  {{#each methods}}
    {{name}}(...) {
      ...
  }
  {{/each}}
```

### Methods
{{#each methods}}
[{{name}}](#callback_{{../name}}_method_{{name}})
{{/each}}
{{#each methods}}
{{~#each params}}// {{name}}: {{maybe-link typ.extra.[0] typ.extra.[1]}}<br/>{{~/each ~}}
  {{name}}({{~#if params.[0] ~}}{{~#each params ~}}{{name}}{{#unless @last}}, {{/unless}}{{~/each ~}}{{~/if}})

Resolves with {{maybe-link returns.success.extra.[0] returns.success.extra.[1]}}

Rejects with {{maybe-link returns.error.extra.[0] returns.error.extra.[1]}}
{{/each}}
{{/each}}

{{#each interfaces}}
## {{name}} Interface
{{#if members}}
### Members
{{#each members}}
[{{name}}](#interface_{{../name}}_member_{{name}})
{{/each}}
{{#each members}}
{{name}} is of type {{maybe-link typ.extra.[0] typ.extra.[1]}}

To get {{amount}} value, use code similar to:
```javascript
_{{sidl-name}}Manager.{{name}}().then(value => { ... });
```
To set {{amount}} value, use code similar to:
```javascript
_{{sidl-name}}Manager.{{name}} = value;
```
{{/each}}
{{/if}}

{{#if methods}}
### Methods
&nbsp;&nbsp;{{#each methods}}[{{name}}](#interface_{{../name}}_method_{{name}})  {{/each}}

{{#each methods}}
  {{~#each params}}// {{name}}: {{maybe-link typ.extra.[0] typ.extra.[1]}}<br/>{{~/each ~}}
  {{name}}({{~#if params.[0] ~}}{{~#each params ~}}{{name}}{{#unless @last}}, {{/unless}}{{~/each ~}}{{~/if}})

  Resolves with {{maybe-link returns.success.extra.[0] returns.success.extra.[1]}}

  Rejects with {{maybe-link returns.error.extra.[0] returns.error.extra.[1]}}

---
{{/each}}
{{/if}}

{{#if events}}
### Events
&nbsp;&nbsp;{{#each events}}[{{name}}](#interface_{{../name}}_event_{{name}})  {{/each}}

{{#each events}}
The {{name}} event emits a {{maybe-link returns.extra.[0] returns.extra.[1]}}

To manage this event, use code similar to:
```javascript
function handleEvent(value) {
    ...
}
_{{sidl-name}}Manager.addEventListener(_{{sidl-name}}Manager.{{upper-snake-case name}}_EVENT, handleEvent);
_{{sidl-name}}Manager.removeEventListener(_{{sidl-name}}Manager.{{upper-snake-case name}}_EVENT, handleEvent);
```
---
{{/each}} {{!-- events --}}
{{/if}}
{{/each}}
